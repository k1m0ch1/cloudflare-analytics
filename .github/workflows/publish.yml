name: Test and Publish to PyPI

on:
  push:
    branches:
      - main
  release:
    types: [created]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -

      - name: Create .env File for testing
        run: |
          echo "CF_API_KEY=${{ secrets.CF_API_KEY }}" >> .env
          echo "CF_HEADER_EMAIL=${{ secrets.CF_HEADER_EMAIL }}" >> .env
          echo "CF_ZONE_ID=${{ secrets.CF_ZONE_ID }}" >> .env
          echo "CF_ACCOUNT_ID=${{ secrets.CF_ACCOUNT_ID }}" >> .env

      - name: Load Poetry environment
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install Dependencies 
        run: poetry install --no-interaction --no-root

      - name: Run Test
        run: poetry run pytest

  publish:
    name: Publish to PyPI
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -

      - name: Install Build Tools
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Load Poetry Environment
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install Dependencies 
        run: poetry install --no-interaction --no-root

      - name: Build Package
        run: poetry run python setup.py sdist

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload dist/*
